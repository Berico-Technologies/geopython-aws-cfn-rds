AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'AWS RDS Postgres with PostGIS and Python Flask microservice using Auto Scaling'
Parameters:
  DBName:
    Default: MyDatabase
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
Resources:
  PostGreSQLDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref 'DBName'
      AllocatedStorage: '5'
      DBInstanceClass: db.t2.small
      Engine: postgres
      EngineVersion: 10.5
      MasterUsername: !Ref 'DBUser'
      MasterUserPassword: !Ref 'DBPassword'
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0ff8a91507f77f867
      SecurityGroups:
      - Ref: myEC2SecurityGroup
      - myExistingEC2SecurityGroup
      InstanceType: t2.micro
      AssociatePublicIpAddress: true
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -ex
          yum update -y
          trap '/opt/aws/bin/cfn-signal -e 1 --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region}' ERR
          INSTANCEID=$(curl -s -m 60 http://169.254.169.254/latest/meta-data/instance-id)
          aws --region ${AWS::Region} ec2 associate-address --instance-id $INSTANCEID --allocation-id ${EIP.AllocationId}
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfiguration --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e 0 --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region}
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        Fn::GetAZs: ''
      LaunchConfigurationName:
        Ref: LaunchConfiguration
      MinSize: '1'
      MaxSize: '1'
      DesiredCapacity: '1'
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT10M
Outputs:
  TemplateID:
    Description: 'template id.'
    Value: 'rds-postgis'
    TemplateVersion:
      Description: 'template version.'
      Value: '__VERSION__'
    StackName:
      Description: 'Stack name.'
      Value: !Sub '${AWS::StackName}'
  ConnectionString:
    Description: JDBC connection string for the database
    Value: !Join [
      '',
      [
        'jdbc:postgres://',
        !GetAtt [PostGreSQLDB, Endpoint.Address],
        ':',
        !GetAtt [PostGreSQLDB, Endpoint.Port],
        /,
        !Ref 'DBName'
      ]
    ]
